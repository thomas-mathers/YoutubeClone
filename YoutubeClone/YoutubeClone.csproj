<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <SpaProxyServerUrl>https://localhost:44462</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="10.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\api\models\page.ts" />
    <None Remove="ClientApp\src\api\models\video-detail.ts" />
    <None Remove="ClientApp\src\api\services\feed-service.ts" />
    <None Remove="ClientApp\src\auth-service-context.ts" />
    <None Remove="ClientApp\src\auth-service.ts" />
    <None Remove="ClientApp\src\components\auth-service-provider.tsx" />
    <None Remove="ClientApp\src\components\bootstrap-dialog-title.tsx" />
    <None Remove="ClientApp\src\components\collapsible-text.tsx" />
    <None Remove="ClientApp\src\components\comment-list.tsx" />
    <None Remove="ClientApp\src\components\comment-text-field.tsx" />
    <None Remove="ClientApp\src\components\comment.tsx" />
    <None Remove="ClientApp\src\components\dislike-button.tsx" />
    <None Remove="ClientApp\src\components\infinite-scroller.tsx" />
    <None Remove="ClientApp\src\components\like-button.tsx" />
    <None Remove="ClientApp\src\components\load-more-scroller.tsx" />
    <None Remove="ClientApp\src\components\notification-button.tsx" />
    <None Remove="ClientApp\src\components\outlined-box.tsx" />
    <None Remove="ClientApp\src\components\reply-list.tsx" />
    <None Remove="ClientApp\src\components\result.tsx" />
    <None Remove="ClientApp\src\components\results-list.tsx" />
    <None Remove="ClientApp\src\components\results-page.tsx" />
    <None Remove="ClientApp\src\components\subscribe-button.tsx" />
    <None Remove="ClientApp\src\components\upload-file.tsx" />
    <None Remove="ClientApp\src\components\upload-video-dialog.tsx" />
    <None Remove="ClientApp\src\components\video-page.tsx" />
    <None Remove="ClientApp\src\components\video-player.tsx" />
    <None Remove="ClientApp\src\components\video-primary-info.tsx" />
    <None Remove="ClientApp\src\components\video-secondary-info.tsx" />
    <None Remove="ClientApp\src\elapsed-time-to-string.ts" />
    <None Remove="ClientApp\src\hooks\use-auth-service.ts" />
    <None Remove="ClientApp\src\hooks\use-local-storage.ts" />
    <None Remove="ClientApp\src\hooks\use-locally-persisted-reducer.ts" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\YoutubeClone.Domain\YoutubeClone.Domain.csproj" />
    <ProjectReference Include="..\YoutubeClone.Infrastructure\YoutubeClone.Infrastructure.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\api\models\page.ts" />
    <TypeScriptCompile Include="ClientApp\src\api\models\video-detail.ts" />
    <TypeScriptCompile Include="ClientApp\src\api\services\feed-service.ts" />
    <TypeScriptCompile Include="ClientApp\src\components\bootstrap-dialog-title.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\collapsible-text.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\comment-text-field.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\comment-list.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\comment.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\dislike-button.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\infinite-scroller.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\like-button.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\load-more-scroller.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\notification-button.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\outlined-box.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\reply-list.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\result.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\results-list.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\results-page.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\subscribe-button.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\upload-video-dialog.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\upload-file.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\auth-service-provider.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\video-page.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\video-player.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\video-primary-info.tsx" />
    <TypeScriptCompile Include="ClientApp\src\components\video-secondary-info.tsx" />
    <TypeScriptCompile Include="ClientApp\src\elapsed-time-to-string.ts" />
    <TypeScriptCompile Include="ClientApp\src\hooks\use-local-storage.ts" />
    <TypeScriptCompile Include="ClientApp\src\hooks\use-locally-persisted-reducer.ts" />
    <TypeScriptCompile Include="ClientApp\src\hooks\use-auth-service.ts" />
    <TypeScriptCompile Include="ClientApp\src\auth-service.ts" />
    <TypeScriptCompile Include="ClientApp\src\auth-service-context.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
